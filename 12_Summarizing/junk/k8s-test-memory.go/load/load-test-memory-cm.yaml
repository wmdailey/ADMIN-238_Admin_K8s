apiVersion: v1
kind: ConfigMap
metadata:
  name: load-test-memory
data:
  load-test-memory.js: |+
    // This script performs a load test on the load-test-memory service.
    // It includes a health check before the main memory stress test begins.

    import http from 'k6/http';
    import { check, sleep, group } from 'k6';

    // Define the test options. This configuration sets up a classic load test.
    export let options = {
      // Define stages for the test.
      // This example ramps up to 20 virtual users (VUs) over 30 seconds,
      // stays at 20 VUs for 5 minutes, and then ramps down to 0 VUs over 30 seconds.
      stages: [
        { duration: '30s', target: 20 }, // Ramp up to 20 VUs
        { duration: '5m', target: 20 },   // Stay at 20 VUs for 5 minutes
        { duration: '30s', target: 0 },   // Ramp down to 0 VUs
      ],
      thresholds: {
        // We want the request duration to be fast, so we set a threshold.
        // 95% of requests must complete within 250ms.
        'http_req_duration': ['p(95)<250'],
        // We want all requests to be successful, so we check for a 200 status code.
        'http_req_failed': ['rate<0.01'], // less than 1% of requests should fail
      },
    };

    // The default function is the entry point for each virtual user (VU).
    export default function () {
      const base_url = 'http://test-memory.default.svc.cluster.local:8080/test-memory';

      // Use groups to logically separate different parts of the test and organize results.
      group('Health Check', function () {
        const healthCheckUrl = `${base_url}/healthz`;
        const res = http.get(healthCheckUrl);
        check(res, { 'health check is status 200': (r) => r.status === 200 });
      });

      // This group performs the memory-incrementing requests.
      group('Memory Stress', function () {
        const memoryTestUrl = `${base_url}/test-memory`;
        const res = http.get(memoryTestUrl);
        check(res, { 'memory test is status 200': (r) => r.status === 200 });
      });

      // Pause for 1 second between requests to simulate user think time.
      sleep(1);
    }

